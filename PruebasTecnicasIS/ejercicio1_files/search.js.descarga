
const searchClient = {
    ...algoliaClient,
    search(requests) {
        if (requests.every(({params}) => !params.query)) {
            return Promise.resolve({
                results: requests.map(() => ({
                    hits: [],
                    nbHits: 0,
                    nbPages: 0,
                    page: 0,
                    processingTimeMS: 0,
                })),
            });
        }

        return algoliaClient.search(requests);
    },
};

const search = instantsearch({
    indexName: algoliaIndex,
    searchClient,
    searchFunction(helper) {
        const container = document.querySelector('#searchResults');
        // container.style.display = helper.state.query === '' ? 'none' : '';

        helper.search();
    }
});

search.addWidgets([

    instantsearch.widgets.searchBox({
        container: "#searchbox",
    }),

    instantsearch.widgets.hits({
        container: '#searchResults',
    })
]);

const renderHits = (renderOptions, isFirstRender) => {
    const {hits, widgetParams} = renderOptions;

    widgetParams.container.innerHTML = `
    <div class="ais-Hits">
    <ul class="ais-Hits-list" 
        role="listbox"
        id="autocomplete-overlay__listbox">
      ${hits
        .map(
            item =>
                `<li class="ais-Hits-item" 
                     role="option"
                     tabindex="-1"
                     class="ais-Hits-item"
                     aria-posinset="${hits.indexOf(item)}"
                     aria-setsize="${hits.length}">
                     <article>
                        <p><a href="/${item.path}">
                            ${instantsearch.highlight({attribute: 'title', hit: item})}
                        </a></p>
                        <p>${instantsearch.highlight({attribute: 'description', hit: item})}</p>
                     </article>
                 </li>`
        )
        .join('')}
    </ul>
    </div>
  `;
};

const customHits = instantsearch.connectors.connectHits(renderHits);

search.addWidgets([
    customHits({
        container: document.querySelector('#searchResults'),
    })
]);

search.start();
